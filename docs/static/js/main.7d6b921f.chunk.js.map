{"version":3,"sources":["components/AddCategory.js","helpers/getGifs.js","components/GifGridItem.js","components/GifGrid.js","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","cats","type","value","onChange","target","protoTypes","PropTypes","func","isRequired","getGifs","category","a","url","encodeURI","fetch","resp","json","data","gifs","map","img","id","title","images","downsized_medium","GifGridItem","className","src","alt","GifGrid","loading","state","setState","useEffect","then","imgs","useFetchGifs","GifExpertApp","categories","ReactDOM","render","document","getElementById"],"mappings":"4NAGaA,EAAc,SAAC,GAAqB,IAApBC,EAAmB,EAAnBA,cAGzB,EAAoCC,mBAAS,IAA7C,mBAAOC,EAAP,KAAmBC,EAAnB,KAiBA,OACI,sBAAMC,SAZW,SAACC,GAClBA,EAAEC,iBAECJ,EAAWK,OAAOC,OAAQ,IACzBR,GAAc,SAAAS,GAAI,OAAKP,GAAL,mBAAoBO,OACtCN,EAAc,MAOlB,SACI,uBACIO,KAAK,OACLC,MAAOT,EACPU,SApBa,SAACP,GACtBF,EAAeE,EAAEQ,OAAOF,aA0BhCZ,EAAYe,WAAa,CACrBd,cAAee,IAAUC,KAAKC,Y,mCClCrBC,EAAO,uCAAG,WAAOC,GAAP,uBAAAC,EAAA,6DACbC,EADa,0DAC4CC,UAAUH,GADtD,sDAEAI,MAAQF,GAFR,cAEbG,EAFa,gBAGIA,EAAKC,OAHT,uBAGXC,EAHW,EAGXA,KAEFC,EAAOD,EAAKE,KAAK,SAAAC,GACnB,MAAO,CACHC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXV,IAAKQ,EAAIG,OAAOC,iBAAiBZ,QATtB,kBAaZM,GAbY,4CAAH,sDCAPO,EAAc,SAAC,GAAoB,IAAlBH,EAAiB,EAAjBA,MAAOV,EAAU,EAAVA,IAIjC,OACI,sBAAKc,UAAU,OAAf,UACI,qBAAKC,IAAMf,EAAKgB,IAAKN,IACrB,kCAAKA,SCJJO,EAAU,SAAC,GAAgB,IAAfnB,EAAc,EAAdA,SAGrB,ECLwB,SAACA,GAE1B,MAA0BlB,mBAAS,CAClCyB,KAAM,GACNa,SAAS,IAFV,mBAAOC,EAAP,KAAcC,EAAd,KAeC,OAVDC,qBAAW,WACVxB,EAAQC,GACHwB,MAAM,SAAAC,GACHH,EAAS,CACLf,KAAMkB,EACNL,SAAS,SAGtB,CAAEpB,IAEMqB,EDZwBK,CAAa1B,GAAhCa,EAAZ,EAAON,KAAP,EAAoBa,QAIpB,OACI,qCACA,6BAAKpB,IACL,qBAAKgB,UAAU,YAAf,SAGYH,EAAOJ,KAAK,SAAAC,GAAG,OACX,cAAC,EAAD,eAEQA,GADCA,EAAIC,aEfxBgB,EAAe,WAIxB,MAAoC7C,mBAAS,CAAC,cAA9C,mBAAO8C,EAAP,KAAmB/C,EAAnB,KAOA,OACI,gCACI,8CACA,cAAC,EAAD,CAAaA,cAAeA,IAC5B,uBAEA,6BAEQ+C,EAAWnB,KAAK,SAAAT,GAAQ,OACpB,cAAC,EAAD,CAEAA,SAAUA,GADLA,YCnB7B6B,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.7d6b921f.chunk.js","sourcesContent":["import React, {useState} from 'react'\r\nimport PropTypes from 'prop-types';\r\n\r\nexport const AddCategory = ({setCategories}) => {\r\n    \r\n    \r\n    const [inputValue, setInputValue] = useState('');\r\n    \r\n    const handleInputValue = (e) => {\r\n        setInputValue( e.target.value);\r\n    }\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        \r\n        if(inputValue.trim().length >2) {\r\n            setCategories(cats => [inputValue, ...cats]);\r\n            setInputValue('');\r\n        }\r\n        \r\n\r\n    }\r\n\r\n    return (\r\n        <form onSubmit={handleSubmit}>\r\n            <input \r\n                type=\"text\"\r\n                value={inputValue}\r\n                onChange={ handleInputValue}\r\n            \r\n            />\r\n        </form>\r\n    )\r\n}\r\n\r\nAddCategory.protoTypes = {\r\n    setCategories: PropTypes.func.isRequired\r\n}\r\n","\r\n\r\nexport const getGifs = async (category) => {\r\n    const url = `https://api.giphy.com/v1/gifs/search?limit=10&q=${encodeURI(category)}&api_key=0dZmFKN8eVpDfa6kFeHnW8WOWJSZciWM`\r\n    const resp = await fetch ( url );\r\n    const { data } = await resp.json();\r\n\r\n    const gifs = data.map( img => {\r\n        return {\r\n            id: img.id,\r\n            title: img.title,\r\n            url: img.images.downsized_medium.url\r\n        }\r\n    })\r\n\r\n    return gifs;\r\n    \r\n}","import React from 'react'\r\n\r\nexport const GifGridItem = ( {title, url} ) => {\r\n    \r\n    //console.log(img)\r\n\r\n    return (\r\n        <div className=\"card\">\r\n            <img src= {url} alt={title} />\r\n            <p> {title}</p>\r\n        </div>\r\n    )\r\n}\r\n","import React, { } from 'react'\r\nimport { useFetchGifs } from '../hooks/useFetchGifs';\r\n//import { getGifs } from '../helpers/getGifs';\r\nimport { GifGridItem } from './GifGridItem';\r\n\r\nexport const GifGrid = ({category}) => {\r\n\r\n    //const [images, setImages] = useState([]);\r\n    const {data:images, loading} = useFetchGifs(category);\r\n\r\n    //console.log(state);\r\n    \r\n    return (\r\n        <>\r\n        <h3>{category}</h3>\r\n        <div className=\"card-grid\">\r\n            \r\n                {\r\n                    images.map( img =>(\r\n                        <GifGridItem \r\n                            key={img.id}\r\n                            {...img} \r\n                        />\r\n\r\n                    ))\r\n                }\r\n            \r\n        </div>\r\n        </>\r\n    )\r\n}\r\n","import {useState, useEffect} from 'react'\r\nimport {getGifs} from '../helpers/getGifs';\r\n\r\nexport const useFetchGifs = (category) => {\r\n   \r\n   const [state, setState] = useState({\r\n    data: [],\r\n    loading: true\r\n   });\r\n\r\n   useEffect( ()=> {\r\n    getGifs(category)\r\n        .then( imgs => {\r\n            setState({\r\n                data: imgs,\r\n                loading: false\r\n            })\r\n        });\r\n}, [ category])\r\n\r\n    return state; // {data:[], loading: true};\r\n}\r\n","\r\nimport React, {useState} from 'react';\r\nimport { AddCategory } from './components/AddCategory';\r\nimport { GifGrid } from './components/GifGrid';\r\n\r\nexport const GifExpertApp = () => {\r\n    \r\n    //const categories = ['One Punch', 'Samurai X', 'Dragon Ball']\r\n    \r\n    const [categories, setCategories] = useState(['One Punch']);\r\n\r\n    // const handleAdd = () => {\r\n    //     //setCategories([...categories, 'Hunter']);\r\n    //     setCategories( cats => [...cats, 'Hunter']);\r\n    // }\r\n\r\n    return (\r\n        <div>\r\n            <h2>GifExpertApp</h2>\r\n            <AddCategory setCategories={setCategories}/>\r\n            <hr />\r\n\r\n            <ol>\r\n                {\r\n                    categories.map( category => (\r\n                        <GifGrid \r\n                        key={category}\r\n                        category={category} />\r\n                    ))\r\n                }\r\n            </ol>\r\n        </div>\r\n    )\r\n}\r\n\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\n\nimport { GifExpertApp } from './GifExpertApp';\n\n\nReactDOM.render(\n  <GifExpertApp />,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}